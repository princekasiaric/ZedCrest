// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZedConf.Persistence;

namespace ZedConf.Persistence.Migrations
{
    [DbContext(typeof(ZedConfDbContext))]
    [Migration("20200813192243_Seeded_Data")]
    partial class Seeded_Data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZedConf.Entities.Attendee", b =>
                {
                    b.Property<long>("AttendeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("TalkID")
                        .HasColumnType("bigint");

                    b.HasKey("AttendeeID");

                    b.HasIndex("TalkID");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            AttendeeID = 1L,
                            Company = "Comtext",
                            CreatedAt = new DateTime(2020, 8, 13, 19, 22, 42, 243, DateTimeKind.Utc).AddTicks(7345),
                            Email = "sandersriley@comtext.com",
                            Name = "Sanders Riley",
                            Registered = new DateTime(2020, 8, 13, 19, 22, 42, 243, DateTimeKind.Utc).AddTicks(6294),
                            TalkID = 1L
                        },
                        new
                        {
                            AttendeeID = 2L,
                            Company = "Utarian",
                            CreatedAt = new DateTime(2020, 8, 13, 19, 22, 42, 243, DateTimeKind.Utc).AddTicks(8478),
                            Email = "beancline@utarian.com",
                            Name = "Bean Cline",
                            Registered = new DateTime(2020, 8, 13, 19, 22, 42, 243, DateTimeKind.Utc).AddTicks(8456),
                            TalkID = 1L
                        },
                        new
                        {
                            AttendeeID = 3L,
                            Company = "Dreamia",
                            CreatedAt = new DateTime(2020, 8, 13, 19, 22, 42, 243, DateTimeKind.Utc).AddTicks(8495),
                            Email = "alfredamitchell@dreamia.com",
                            Name = "Alfreda Mitchell",
                            Registered = new DateTime(2020, 8, 13, 19, 22, 42, 243, DateTimeKind.Utc).AddTicks(8493),
                            TalkID = 1L
                        });
                });

            modelBuilder.Entity("ZedConf.Entities.Speaker", b =>
                {
                    b.Property<long>("SpeakerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("TalkID")
                        .HasColumnType("bigint");

                    b.HasKey("SpeakerID");

                    b.HasIndex("TalkID")
                        .IsUnique();

                    b.ToTable("Speakers");

                    b.HasData(
                        new
                        {
                            SpeakerID = 1L,
                            Bio = "Magna velit adipisicing ullamco sint duis nisi.",
                            Company = "Songlines",
                            CreatedAt = new DateTime(2020, 8, 13, 19, 22, 42, 242, DateTimeKind.Utc).AddTicks(103),
                            Email = "hendrixcarroll@songlines.com",
                            Name = "Hendrix Carroll",
                            TalkID = 1L
                        },
                        new
                        {
                            SpeakerID = 2L,
                            Bio = "Veniam do eu quis officia enim.",
                            Company = "Zillatide",
                            CreatedAt = new DateTime(2020, 8, 13, 19, 22, 42, 242, DateTimeKind.Utc).AddTicks(1444),
                            Email = "melodyjuarez@zillatide.com",
                            Name = "Melody Juarez",
                            TalkID = 2L
                        });
                });

            modelBuilder.Entity("ZedConf.Entities.Talk", b =>
                {
                    b.Property<long>("TalkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("Room")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TalkID");

                    b.ToTable("Talks");

                    b.HasData(
                        new
                        {
                            TalkID = 1L,
                            Abstract = "Aliqua consequat mollit Lorem dolor nulla qui sunt tempor veniam eiusmod ullamco quis commodo.",
                            CreatedAt = new DateTime(2020, 8, 13, 19, 22, 42, 237, DateTimeKind.Utc).AddTicks(6265),
                            Room = 873,
                            Title = "CILLUM NON"
                        },
                        new
                        {
                            TalkID = 2L,
                            Abstract = "Fugiat nisi et mollit consequat sint.",
                            CreatedAt = new DateTime(2020, 8, 13, 19, 22, 42, 237, DateTimeKind.Utc).AddTicks(7517),
                            Room = 343,
                            Title = "AD IPSUM"
                        });
                });

            modelBuilder.Entity("ZedConf.Entities.Attendee", b =>
                {
                    b.HasOne("ZedConf.Entities.Talk", "Talk")
                        .WithMany("Attendees")
                        .HasForeignKey("TalkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZedConf.Entities.Speaker", b =>
                {
                    b.HasOne("ZedConf.Entities.Talk", "Talk")
                        .WithOne("Speaker")
                        .HasForeignKey("ZedConf.Entities.Speaker", "TalkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
